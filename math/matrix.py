import numpy as np

def rank_decomposition(A=None):
    '''
    Generated by Google Bard
    A = The matrix
    C = Core matrix
    F = Factor matrix
    '''
    if A is None:
        A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    m, n = A.shape
    C = np.zeros((m, min(m, n)))
    F = np.zeros((min(m, n), n))
    for i in range(min(m, n)):
        c = np.linalg.norm(A[:, i])
        if c > 0:
            C[:, i] = A[:, i] / c
            F[:, i] = np.dot(A.T, C[:, i])
    return C, F

